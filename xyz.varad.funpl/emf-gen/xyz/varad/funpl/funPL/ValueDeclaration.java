/**
 * generated by Xtext 2.15.0
 */
package xyz.varad.funpl.funPL;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Value Declaration</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link xyz.varad.funpl.funPL.ValueDeclaration#isConstant <em>Constant</em>}</li>
 *   <li>{@link xyz.varad.funpl.funPL.ValueDeclaration#getExpression <em>Expression</em>}</li>
 * </ul>
 *
 * @see xyz.varad.funpl.funPL.FunPLPackage#getValueDeclaration()
 * @model
 * @generated
 */
public interface ValueDeclaration extends Statement, Declaration {
	/**
	 * Returns the value of the '<em><b>Constant</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Constant</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Constant</em>' attribute.
	 * @see #setConstant(boolean)
	 * @see xyz.varad.funpl.funPL.FunPLPackage#getValueDeclaration_Constant()
	 * @model dataType="org.eclipse.emf.ecore.xml.type.Boolean"
	 * @generated
	 */
	boolean isConstant();

	/**
	 * Sets the value of the '{@link xyz.varad.funpl.funPL.ValueDeclaration#isConstant <em>Constant</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Constant</em>' attribute.
	 * @see #isConstant()
	 * @generated
	 */
	void setConstant(boolean value);

	/**
	 * Returns the value of the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Expression</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Expression</em>' containment reference.
	 * @see #isSetExpression()
	 * @see #unsetExpression()
	 * @see #setExpression(Expression)
	 * @see xyz.varad.funpl.funPL.FunPLPackage#getValueDeclaration_Expression()
	 * @model containment="true" unsettable="true"
	 * @generated
	 */
	Expression getExpression();

	/**
	 * Sets the value of the '{@link xyz.varad.funpl.funPL.ValueDeclaration#getExpression <em>Expression</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Expression</em>' containment reference.
	 * @see #isSetExpression()
	 * @see #unsetExpression()
	 * @see #getExpression()
	 * @generated
	 */
	void setExpression(Expression value);

	/**
	 * Unsets the value of the '{@link xyz.varad.funpl.funPL.ValueDeclaration#getExpression <em>Expression</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isSetExpression()
	 * @see #getExpression()
	 * @see #setExpression(Expression)
	 * @generated
	 */
	void unsetExpression();

	/**
	 * Returns whether the value of the '{@link xyz.varad.funpl.funPL.ValueDeclaration#getExpression <em>Expression</em>}' containment reference is set.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return whether the value of the '<em>Expression</em>' containment reference is set.
	 * @see #unsetExpression()
	 * @see #getExpression()
	 * @see #setExpression(Expression)
	 * @generated
	 */
	boolean isSetExpression();

} // ValueDeclaration

/**
 * generated by Xtext 2.15.0
 */
package xyz.varad.funpl.funPL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see xyz.varad.funpl.funPL.FunPLFactory
 * @model kind="package"
 * @generated
 */
public interface FunPLPackage extends EPackage {
	/**
	 * The package name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNAME = "funPL";

	/**
	 * The package namespace URI.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_URI = "http://www.varad.xyz/funpl/FunPL";

	/**
	 * The package namespace name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_PREFIX = "funPL";

	/**
	 * The singleton instance of the package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	FunPLPackage eINSTANCE = xyz.varad.funpl.funPL.impl.FunPLPackageImpl.init();

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.NamedElement <em>Named Element</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.NamedElement
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getNamedElement()
	 * @generated
	 */
	int NAMED_ELEMENT = 12;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_ELEMENT__NAME = 0;

	/**
	 * The number of structural features of the '<em>Named Element</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_ELEMENT_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunProgramImpl <em>Fun Program</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.FunProgramImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunProgram()
	 * @generated
	 */
	int FUN_PROGRAM = 0;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUN_PROGRAM__NAME = NAMED_ELEMENT__NAME;

	/**
	 * The feature id for the '<em><b>Elements</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUN_PROGRAM__ELEMENTS = NAMED_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Fun Program</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUN_PROGRAM_FEATURE_COUNT = NAMED_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.AbstractElement <em>Abstract Element</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.AbstractElement
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getAbstractElement()
	 * @generated
	 */
	int ABSTRACT_ELEMENT = 1;

	/**
	 * The number of structural features of the '<em>Abstract Element</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_ELEMENT_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.Declaration <em>Declaration</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.Declaration
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getDeclaration()
	 * @generated
	 */
	int DECLARATION = 2;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLARATION__NAME = ABSTRACT_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLARATION__RETURN_TYPE = ABSTRACT_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Declared Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLARATION__DECLARED_TYPE = ABSTRACT_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLARATION_FEATURE_COUNT = ABSTRACT_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.TypeInferredElement <em>Type Inferred Element</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.TypeInferredElement
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getTypeInferredElement()
	 * @generated
	 */
	int TYPE_INFERRED_ELEMENT = 4;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_INFERRED_ELEMENT__RETURN_TYPE = 0;

	/**
	 * The number of structural features of the '<em>Type Inferred Element</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_INFERRED_ELEMENT_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.TypeDeclaredElement <em>Type Declared Element</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.TypeDeclaredElement
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getTypeDeclaredElement()
	 * @generated
	 */
	int TYPE_DECLARED_ELEMENT = 3;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARED_ELEMENT__RETURN_TYPE = TYPE_INFERRED_ELEMENT__RETURN_TYPE;

	/**
	 * The feature id for the '<em><b>Declared Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARED_ELEMENT__DECLARED_TYPE = TYPE_INFERRED_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Type Declared Element</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARED_ELEMENT_FEATURE_COUNT = TYPE_INFERRED_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.Statement <em>Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.Statement
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getStatement()
	 * @generated
	 */
	int STATEMENT = 9;

	/**
	 * The number of structural features of the '<em>Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.ValueDeclarationImpl <em>Value Declaration</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.ValueDeclarationImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getValueDeclaration()
	 * @generated
	 */
	int VALUE_DECLARATION = 5;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VALUE_DECLARATION__NAME = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VALUE_DECLARATION__RETURN_TYPE = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Declared Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VALUE_DECLARATION__DECLARED_TYPE = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Constant</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VALUE_DECLARATION__CONSTANT = STATEMENT_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VALUE_DECLARATION__EXPRESSION = STATEMENT_FEATURE_COUNT + 4;

	/**
	 * The number of structural features of the '<em>Value Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VALUE_DECLARATION_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 5;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunctionDeclarationImpl <em>Function Declaration</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.FunctionDeclarationImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunctionDeclaration()
	 * @generated
	 */
	int FUNCTION_DECLARATION = 6;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECLARATION__NAME = DECLARATION__NAME;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECLARATION__RETURN_TYPE = DECLARATION__RETURN_TYPE;

	/**
	 * The feature id for the '<em><b>Declared Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECLARATION__DECLARED_TYPE = DECLARATION__DECLARED_TYPE;

	/**
	 * The feature id for the '<em><b>Body</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECLARATION__BODY = DECLARATION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Parameter List</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECLARATION__PARAMETER_LIST = DECLARATION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Function Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECLARATION_FEATURE_COUNT = DECLARATION_FEATURE_COUNT + 2;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.ParameterListImpl <em>Parameter List</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.ParameterListImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getParameterList()
	 * @generated
	 */
	int PARAMETER_LIST = 7;

	/**
	 * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PARAMETER_LIST__PARAMETERS = 0;

	/**
	 * The number of structural features of the '<em>Parameter List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PARAMETER_LIST_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.BlockImpl <em>Block</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.BlockImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBlock()
	 * @generated
	 */
	int BLOCK = 8;

	/**
	 * The feature id for the '<em><b>Statements</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK__STATEMENTS = 0;

	/**
	 * The number of structural features of the '<em>Block</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.Expression <em>Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.Expression
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getExpression()
	 * @generated
	 */
	int EXPRESSION = 10;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION__RETURN_TYPE = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.ReturnStatementImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getReturnStatement()
	 * @generated
	 */
	int RETURN_STATEMENT = 11;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT__RETURN_TYPE = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT__EXPRESSION = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Return Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.LiteralExpression <em>Literal Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.LiteralExpression
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getLiteralExpression()
	 * @generated
	 */
	int LITERAL_EXPRESSION = 13;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION__RETURN_TYPE = EXPRESSION__RETURN_TYPE;

	/**
	 * The number of structural features of the '<em>Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.BinaryExpression <em>Binary Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.BinaryExpression
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBinaryExpression()
	 * @generated
	 */
	int BINARY_EXPRESSION = 14;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__RETURN_TYPE = EXPRESSION__RETURN_TYPE;

	/**
	 * The feature id for the '<em><b>Left</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Right</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Binary Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.IntegerLiteralExpressionImpl <em>Integer Literal Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.IntegerLiteralExpressionImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getIntegerLiteralExpression()
	 * @generated
	 */
	int INTEGER_LITERAL_EXPRESSION = 15;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTEGER_LITERAL_EXPRESSION__RETURN_TYPE = LITERAL_EXPRESSION__RETURN_TYPE;

	/**
	 * The feature id for the '<em><b>Value</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTEGER_LITERAL_EXPRESSION__VALUE = LITERAL_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Integer Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTEGER_LITERAL_EXPRESSION_FEATURE_COUNT = LITERAL_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.BooleanLiteralExpressionImpl <em>Boolean Literal Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.BooleanLiteralExpressionImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBooleanLiteralExpression()
	 * @generated
	 */
	int BOOLEAN_LITERAL_EXPRESSION = 16;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION__RETURN_TYPE = LITERAL_EXPRESSION__RETURN_TYPE;

	/**
	 * The feature id for the '<em><b>Value</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION__VALUE = LITERAL_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Boolean Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION_FEATURE_COUNT = LITERAL_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.PlusExpressionImpl <em>Plus Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.PlusExpressionImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getPlusExpression()
	 * @generated
	 */
	int PLUS_EXPRESSION = 17;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PLUS_EXPRESSION__RETURN_TYPE = BINARY_EXPRESSION__RETURN_TYPE;

	/**
	 * The feature id for the '<em><b>Left</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PLUS_EXPRESSION__LEFT = BINARY_EXPRESSION__LEFT;

	/**
	 * The feature id for the '<em><b>Right</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PLUS_EXPRESSION__RIGHT = BINARY_EXPRESSION__RIGHT;

	/**
	 * The number of structural features of the '<em>Plus Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PLUS_EXPRESSION_FEATURE_COUNT = BINARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.AssignmentExpressionImpl <em>Assignment Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.AssignmentExpressionImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getAssignmentExpression()
	 * @generated
	 */
	int ASSIGNMENT_EXPRESSION = 18;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__RETURN_TYPE = BINARY_EXPRESSION__RETURN_TYPE;

	/**
	 * The feature id for the '<em><b>Left</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__LEFT = BINARY_EXPRESSION__LEFT;

	/**
	 * The feature id for the '<em><b>Right</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__RIGHT = BINARY_EXPRESSION__RIGHT;

	/**
	 * The number of structural features of the '<em>Assignment Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION_FEATURE_COUNT = BINARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.Type <em>Type</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.Type
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getType()
	 * @generated
	 */
	int TYPE = 19;

	/**
	 * The number of structural features of the '<em>Type</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.TypeDefinition <em>Type Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.TypeDefinition
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getTypeDefinition()
	 * @generated
	 */
	int TYPE_DEFINITION = 20;

	/**
	 * The number of structural features of the '<em>Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DEFINITION_FEATURE_COUNT = TYPE_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.BasicTypeDefinition <em>Basic Type Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.BasicTypeDefinition
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBasicTypeDefinition()
	 * @generated
	 */
	int BASIC_TYPE_DEFINITION = 21;

	/**
	 * The number of structural features of the '<em>Basic Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BASIC_TYPE_DEFINITION_FEATURE_COUNT = TYPE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.IntegerTypeDefinitionImpl <em>Integer Type Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.IntegerTypeDefinitionImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getIntegerTypeDefinition()
	 * @generated
	 */
	int INTEGER_TYPE_DEFINITION = 22;

	/**
	 * The number of structural features of the '<em>Integer Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTEGER_TYPE_DEFINITION_FEATURE_COUNT = BASIC_TYPE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.BooleanTypeDefinitionImpl <em>Boolean Type Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.BooleanTypeDefinitionImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBooleanTypeDefinition()
	 * @generated
	 */
	int BOOLEAN_TYPE_DEFINITION = 23;

	/**
	 * The number of structural features of the '<em>Boolean Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_TYPE_DEFINITION_FEATURE_COUNT = BASIC_TYPE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.VoidTypeDefinitionImpl <em>Void Type Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.VoidTypeDefinitionImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getVoidTypeDefinition()
	 * @generated
	 */
	int VOID_TYPE_DEFINITION = 24;

	/**
	 * The number of structural features of the '<em>Void Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VOID_TYPE_DEFINITION_FEATURE_COUNT = BASIC_TYPE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunctionTypeDefinitionImpl <em>Function Type Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.FunctionTypeDefinitionImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunctionTypeDefinition()
	 * @generated
	 */
	int FUNCTION_TYPE_DEFINITION = 25;

	/**
	 * The number of structural features of the '<em>Function Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_TYPE_DEFINITION_FEATURE_COUNT = TYPE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.ReferenceExpressionImpl <em>Reference Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.ReferenceExpressionImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getReferenceExpression()
	 * @generated
	 */
	int REFERENCE_EXPRESSION = 26;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int REFERENCE_EXPRESSION__RETURN_TYPE = EXPRESSION__RETURN_TYPE;

	/**
	 * The feature id for the '<em><b>Argument List</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int REFERENCE_EXPRESSION__ARGUMENT_LIST = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Declaration</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int REFERENCE_EXPRESSION__DECLARATION = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Reference Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int REFERENCE_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.ArgumentListImpl <em>Argument List</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.ArgumentListImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getArgumentList()
	 * @generated
	 */
	int ARGUMENT_LIST = 27;

	/**
	 * The feature id for the '<em><b>Arguments</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARGUMENT_LIST__ARGUMENTS = 0;

	/**
	 * The number of structural features of the '<em>Argument List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARGUMENT_LIST_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FinalValueDeclarationImpl <em>Final Value Declaration</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see xyz.varad.funpl.funPL.impl.FinalValueDeclarationImpl
	 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFinalValueDeclaration()
	 * @generated
	 */
	int FINAL_VALUE_DECLARATION = 28;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FINAL_VALUE_DECLARATION__NAME = VALUE_DECLARATION__NAME;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FINAL_VALUE_DECLARATION__RETURN_TYPE = VALUE_DECLARATION__RETURN_TYPE;

	/**
	 * The feature id for the '<em><b>Declared Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FINAL_VALUE_DECLARATION__DECLARED_TYPE = VALUE_DECLARATION__DECLARED_TYPE;

	/**
	 * The feature id for the '<em><b>Constant</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FINAL_VALUE_DECLARATION__CONSTANT = VALUE_DECLARATION__CONSTANT;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FINAL_VALUE_DECLARATION__EXPRESSION = VALUE_DECLARATION__EXPRESSION;

	/**
	 * The number of structural features of the '<em>Final Value Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FINAL_VALUE_DECLARATION_FEATURE_COUNT = VALUE_DECLARATION_FEATURE_COUNT + 0;


	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunProgram <em>Fun Program</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Fun Program</em>'.
	 * @see xyz.varad.funpl.funPL.FunProgram
	 * @generated
	 */
	EClass getFunProgram();

	/**
	 * Returns the meta object for the containment reference list '{@link xyz.varad.funpl.funPL.FunProgram#getElements <em>Elements</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Elements</em>'.
	 * @see xyz.varad.funpl.funPL.FunProgram#getElements()
	 * @see #getFunProgram()
	 * @generated
	 */
	EReference getFunProgram_Elements();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.AbstractElement <em>Abstract Element</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Abstract Element</em>'.
	 * @see xyz.varad.funpl.funPL.AbstractElement
	 * @generated
	 */
	EClass getAbstractElement();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Declaration <em>Declaration</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Declaration</em>'.
	 * @see xyz.varad.funpl.funPL.Declaration
	 * @generated
	 */
	EClass getDeclaration();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.TypeDeclaredElement <em>Type Declared Element</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Declared Element</em>'.
	 * @see xyz.varad.funpl.funPL.TypeDeclaredElement
	 * @generated
	 */
	EClass getTypeDeclaredElement();

	/**
	 * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.TypeDeclaredElement#getDeclaredType <em>Declared Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Declared Type</em>'.
	 * @see xyz.varad.funpl.funPL.TypeDeclaredElement#getDeclaredType()
	 * @see #getTypeDeclaredElement()
	 * @generated
	 */
	EReference getTypeDeclaredElement_DeclaredType();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.TypeInferredElement <em>Type Inferred Element</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Inferred Element</em>'.
	 * @see xyz.varad.funpl.funPL.TypeInferredElement
	 * @generated
	 */
	EClass getTypeInferredElement();

	/**
	 * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.TypeInferredElement#getReturnType <em>Return Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Return Type</em>'.
	 * @see xyz.varad.funpl.funPL.TypeInferredElement#getReturnType()
	 * @see #getTypeInferredElement()
	 * @generated
	 */
	EReference getTypeInferredElement_ReturnType();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.ValueDeclaration <em>Value Declaration</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Value Declaration</em>'.
	 * @see xyz.varad.funpl.funPL.ValueDeclaration
	 * @generated
	 */
	EClass getValueDeclaration();

	/**
	 * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.ValueDeclaration#isConstant <em>Constant</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Constant</em>'.
	 * @see xyz.varad.funpl.funPL.ValueDeclaration#isConstant()
	 * @see #getValueDeclaration()
	 * @generated
	 */
	EAttribute getValueDeclaration_Constant();

	/**
	 * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.ValueDeclaration#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see xyz.varad.funpl.funPL.ValueDeclaration#getExpression()
	 * @see #getValueDeclaration()
	 * @generated
	 */
	EReference getValueDeclaration_Expression();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunctionDeclaration <em>Function Declaration</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Function Declaration</em>'.
	 * @see xyz.varad.funpl.funPL.FunctionDeclaration
	 * @generated
	 */
	EClass getFunctionDeclaration();

	/**
	 * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.FunctionDeclaration#getBody <em>Body</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Body</em>'.
	 * @see xyz.varad.funpl.funPL.FunctionDeclaration#getBody()
	 * @see #getFunctionDeclaration()
	 * @generated
	 */
	EReference getFunctionDeclaration_Body();

	/**
	 * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.FunctionDeclaration#getParameterList <em>Parameter List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Parameter List</em>'.
	 * @see xyz.varad.funpl.funPL.FunctionDeclaration#getParameterList()
	 * @see #getFunctionDeclaration()
	 * @generated
	 */
	EReference getFunctionDeclaration_ParameterList();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.ParameterList <em>Parameter List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Parameter List</em>'.
	 * @see xyz.varad.funpl.funPL.ParameterList
	 * @generated
	 */
	EClass getParameterList();

	/**
	 * Returns the meta object for the containment reference list '{@link xyz.varad.funpl.funPL.ParameterList#getParameters <em>Parameters</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Parameters</em>'.
	 * @see xyz.varad.funpl.funPL.ParameterList#getParameters()
	 * @see #getParameterList()
	 * @generated
	 */
	EReference getParameterList_Parameters();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Block <em>Block</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Block</em>'.
	 * @see xyz.varad.funpl.funPL.Block
	 * @generated
	 */
	EClass getBlock();

	/**
	 * Returns the meta object for the containment reference list '{@link xyz.varad.funpl.funPL.Block#getStatements <em>Statements</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Statements</em>'.
	 * @see xyz.varad.funpl.funPL.Block#getStatements()
	 * @see #getBlock()
	 * @generated
	 */
	EReference getBlock_Statements();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Statement <em>Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Statement</em>'.
	 * @see xyz.varad.funpl.funPL.Statement
	 * @generated
	 */
	EClass getStatement();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Expression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Expression</em>'.
	 * @see xyz.varad.funpl.funPL.Expression
	 * @generated
	 */
	EClass getExpression();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.ReturnStatement <em>Return Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Return Statement</em>'.
	 * @see xyz.varad.funpl.funPL.ReturnStatement
	 * @generated
	 */
	EClass getReturnStatement();

	/**
	 * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.ReturnStatement#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see xyz.varad.funpl.funPL.ReturnStatement#getExpression()
	 * @see #getReturnStatement()
	 * @generated
	 */
	EReference getReturnStatement_Expression();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.NamedElement <em>Named Element</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Named Element</em>'.
	 * @see xyz.varad.funpl.funPL.NamedElement
	 * @generated
	 */
	EClass getNamedElement();

	/**
	 * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.NamedElement#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see xyz.varad.funpl.funPL.NamedElement#getName()
	 * @see #getNamedElement()
	 * @generated
	 */
	EAttribute getNamedElement_Name();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.LiteralExpression <em>Literal Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Literal Expression</em>'.
	 * @see xyz.varad.funpl.funPL.LiteralExpression
	 * @generated
	 */
	EClass getLiteralExpression();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.BinaryExpression <em>Binary Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Binary Expression</em>'.
	 * @see xyz.varad.funpl.funPL.BinaryExpression
	 * @generated
	 */
	EClass getBinaryExpression();

	/**
	 * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.BinaryExpression#getLeft <em>Left</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Left</em>'.
	 * @see xyz.varad.funpl.funPL.BinaryExpression#getLeft()
	 * @see #getBinaryExpression()
	 * @generated
	 */
	EReference getBinaryExpression_Left();

	/**
	 * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.BinaryExpression#getRight <em>Right</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Right</em>'.
	 * @see xyz.varad.funpl.funPL.BinaryExpression#getRight()
	 * @see #getBinaryExpression()
	 * @generated
	 */
	EReference getBinaryExpression_Right();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.IntegerLiteralExpression <em>Integer Literal Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Integer Literal Expression</em>'.
	 * @see xyz.varad.funpl.funPL.IntegerLiteralExpression
	 * @generated
	 */
	EClass getIntegerLiteralExpression();

	/**
	 * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.IntegerLiteralExpression#getValue <em>Value</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Value</em>'.
	 * @see xyz.varad.funpl.funPL.IntegerLiteralExpression#getValue()
	 * @see #getIntegerLiteralExpression()
	 * @generated
	 */
	EAttribute getIntegerLiteralExpression_Value();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.BooleanLiteralExpression <em>Boolean Literal Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Boolean Literal Expression</em>'.
	 * @see xyz.varad.funpl.funPL.BooleanLiteralExpression
	 * @generated
	 */
	EClass getBooleanLiteralExpression();

	/**
	 * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.BooleanLiteralExpression#isValue <em>Value</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Value</em>'.
	 * @see xyz.varad.funpl.funPL.BooleanLiteralExpression#isValue()
	 * @see #getBooleanLiteralExpression()
	 * @generated
	 */
	EAttribute getBooleanLiteralExpression_Value();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.PlusExpression <em>Plus Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Plus Expression</em>'.
	 * @see xyz.varad.funpl.funPL.PlusExpression
	 * @generated
	 */
	EClass getPlusExpression();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.AssignmentExpression <em>Assignment Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Assignment Expression</em>'.
	 * @see xyz.varad.funpl.funPL.AssignmentExpression
	 * @generated
	 */
	EClass getAssignmentExpression();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Type <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type</em>'.
	 * @see xyz.varad.funpl.funPL.Type
	 * @generated
	 */
	EClass getType();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.TypeDefinition <em>Type Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Definition</em>'.
	 * @see xyz.varad.funpl.funPL.TypeDefinition
	 * @generated
	 */
	EClass getTypeDefinition();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.BasicTypeDefinition <em>Basic Type Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Basic Type Definition</em>'.
	 * @see xyz.varad.funpl.funPL.BasicTypeDefinition
	 * @generated
	 */
	EClass getBasicTypeDefinition();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.IntegerTypeDefinition <em>Integer Type Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Integer Type Definition</em>'.
	 * @see xyz.varad.funpl.funPL.IntegerTypeDefinition
	 * @generated
	 */
	EClass getIntegerTypeDefinition();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.BooleanTypeDefinition <em>Boolean Type Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Boolean Type Definition</em>'.
	 * @see xyz.varad.funpl.funPL.BooleanTypeDefinition
	 * @generated
	 */
	EClass getBooleanTypeDefinition();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.VoidTypeDefinition <em>Void Type Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Void Type Definition</em>'.
	 * @see xyz.varad.funpl.funPL.VoidTypeDefinition
	 * @generated
	 */
	EClass getVoidTypeDefinition();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunctionTypeDefinition <em>Function Type Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Function Type Definition</em>'.
	 * @see xyz.varad.funpl.funPL.FunctionTypeDefinition
	 * @generated
	 */
	EClass getFunctionTypeDefinition();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.ReferenceExpression <em>Reference Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Reference Expression</em>'.
	 * @see xyz.varad.funpl.funPL.ReferenceExpression
	 * @generated
	 */
	EClass getReferenceExpression();

	/**
	 * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.ReferenceExpression#getArgumentList <em>Argument List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Argument List</em>'.
	 * @see xyz.varad.funpl.funPL.ReferenceExpression#getArgumentList()
	 * @see #getReferenceExpression()
	 * @generated
	 */
	EReference getReferenceExpression_ArgumentList();

	/**
	 * Returns the meta object for the reference '{@link xyz.varad.funpl.funPL.ReferenceExpression#getDeclaration <em>Declaration</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Declaration</em>'.
	 * @see xyz.varad.funpl.funPL.ReferenceExpression#getDeclaration()
	 * @see #getReferenceExpression()
	 * @generated
	 */
	EReference getReferenceExpression_Declaration();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.ArgumentList <em>Argument List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Argument List</em>'.
	 * @see xyz.varad.funpl.funPL.ArgumentList
	 * @generated
	 */
	EClass getArgumentList();

	/**
	 * Returns the meta object for the containment reference list '{@link xyz.varad.funpl.funPL.ArgumentList#getArguments <em>Arguments</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Arguments</em>'.
	 * @see xyz.varad.funpl.funPL.ArgumentList#getArguments()
	 * @see #getArgumentList()
	 * @generated
	 */
	EReference getArgumentList_Arguments();

	/**
	 * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FinalValueDeclaration <em>Final Value Declaration</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Final Value Declaration</em>'.
	 * @see xyz.varad.funpl.funPL.FinalValueDeclaration
	 * @generated
	 */
	EClass getFinalValueDeclaration();

	/**
	 * Returns the factory that creates the instances of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the factory that creates the instances of the model.
	 * @generated
	 */
	FunPLFactory getFunPLFactory();

	/**
	 * <!-- begin-user-doc -->
	 * Defines literals for the meta objects that represent
	 * <ul>
	 *   <li>each class,</li>
	 *   <li>each feature of each class,</li>
	 *   <li>each enum,</li>
	 *   <li>and each data type</li>
	 * </ul>
	 * <!-- end-user-doc -->
	 * @generated
	 */
	interface Literals {
		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunProgramImpl <em>Fun Program</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.FunProgramImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunProgram()
		 * @generated
		 */
		EClass FUN_PROGRAM = eINSTANCE.getFunProgram();

		/**
		 * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUN_PROGRAM__ELEMENTS = eINSTANCE.getFunProgram_Elements();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.AbstractElement <em>Abstract Element</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.AbstractElement
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getAbstractElement()
		 * @generated
		 */
		EClass ABSTRACT_ELEMENT = eINSTANCE.getAbstractElement();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.Declaration <em>Declaration</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.Declaration
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getDeclaration()
		 * @generated
		 */
		EClass DECLARATION = eINSTANCE.getDeclaration();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.TypeDeclaredElement <em>Type Declared Element</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.TypeDeclaredElement
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getTypeDeclaredElement()
		 * @generated
		 */
		EClass TYPE_DECLARED_ELEMENT = eINSTANCE.getTypeDeclaredElement();

		/**
		 * The meta object literal for the '<em><b>Declared Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_DECLARED_ELEMENT__DECLARED_TYPE = eINSTANCE.getTypeDeclaredElement_DeclaredType();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.TypeInferredElement <em>Type Inferred Element</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.TypeInferredElement
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getTypeInferredElement()
		 * @generated
		 */
		EClass TYPE_INFERRED_ELEMENT = eINSTANCE.getTypeInferredElement();

		/**
		 * The meta object literal for the '<em><b>Return Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_INFERRED_ELEMENT__RETURN_TYPE = eINSTANCE.getTypeInferredElement_ReturnType();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.ValueDeclarationImpl <em>Value Declaration</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.ValueDeclarationImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getValueDeclaration()
		 * @generated
		 */
		EClass VALUE_DECLARATION = eINSTANCE.getValueDeclaration();

		/**
		 * The meta object literal for the '<em><b>Constant</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute VALUE_DECLARATION__CONSTANT = eINSTANCE.getValueDeclaration_Constant();

		/**
		 * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference VALUE_DECLARATION__EXPRESSION = eINSTANCE.getValueDeclaration_Expression();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunctionDeclarationImpl <em>Function Declaration</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.FunctionDeclarationImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunctionDeclaration()
		 * @generated
		 */
		EClass FUNCTION_DECLARATION = eINSTANCE.getFunctionDeclaration();

		/**
		 * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECLARATION__BODY = eINSTANCE.getFunctionDeclaration_Body();

		/**
		 * The meta object literal for the '<em><b>Parameter List</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECLARATION__PARAMETER_LIST = eINSTANCE.getFunctionDeclaration_ParameterList();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.ParameterListImpl <em>Parameter List</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.ParameterListImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getParameterList()
		 * @generated
		 */
		EClass PARAMETER_LIST = eINSTANCE.getParameterList();

		/**
		 * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference PARAMETER_LIST__PARAMETERS = eINSTANCE.getParameterList_Parameters();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.BlockImpl <em>Block</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.BlockImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBlock()
		 * @generated
		 */
		EClass BLOCK = eINSTANCE.getBlock();

		/**
		 * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BLOCK__STATEMENTS = eINSTANCE.getBlock_Statements();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.Statement <em>Statement</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.Statement
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getStatement()
		 * @generated
		 */
		EClass STATEMENT = eINSTANCE.getStatement();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.Expression <em>Expression</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.Expression
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getExpression()
		 * @generated
		 */
		EClass EXPRESSION = eINSTANCE.getExpression();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.ReturnStatementImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getReturnStatement()
		 * @generated
		 */
		EClass RETURN_STATEMENT = eINSTANCE.getReturnStatement();

		/**
		 * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference RETURN_STATEMENT__EXPRESSION = eINSTANCE.getReturnStatement_Expression();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.NamedElement <em>Named Element</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.NamedElement
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getNamedElement()
		 * @generated
		 */
		EClass NAMED_ELEMENT = eINSTANCE.getNamedElement();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute NAMED_ELEMENT__NAME = eINSTANCE.getNamedElement_Name();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.LiteralExpression <em>Literal Expression</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.LiteralExpression
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getLiteralExpression()
		 * @generated
		 */
		EClass LITERAL_EXPRESSION = eINSTANCE.getLiteralExpression();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.BinaryExpression <em>Binary Expression</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.BinaryExpression
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBinaryExpression()
		 * @generated
		 */
		EClass BINARY_EXPRESSION = eINSTANCE.getBinaryExpression();

		/**
		 * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BINARY_EXPRESSION__LEFT = eINSTANCE.getBinaryExpression_Left();

		/**
		 * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BINARY_EXPRESSION__RIGHT = eINSTANCE.getBinaryExpression_Right();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.IntegerLiteralExpressionImpl <em>Integer Literal Expression</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.IntegerLiteralExpressionImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getIntegerLiteralExpression()
		 * @generated
		 */
		EClass INTEGER_LITERAL_EXPRESSION = eINSTANCE.getIntegerLiteralExpression();

		/**
		 * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute INTEGER_LITERAL_EXPRESSION__VALUE = eINSTANCE.getIntegerLiteralExpression_Value();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.BooleanLiteralExpressionImpl <em>Boolean Literal Expression</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.BooleanLiteralExpressionImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBooleanLiteralExpression()
		 * @generated
		 */
		EClass BOOLEAN_LITERAL_EXPRESSION = eINSTANCE.getBooleanLiteralExpression();

		/**
		 * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute BOOLEAN_LITERAL_EXPRESSION__VALUE = eINSTANCE.getBooleanLiteralExpression_Value();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.PlusExpressionImpl <em>Plus Expression</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.PlusExpressionImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getPlusExpression()
		 * @generated
		 */
		EClass PLUS_EXPRESSION = eINSTANCE.getPlusExpression();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.AssignmentExpressionImpl <em>Assignment Expression</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.AssignmentExpressionImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getAssignmentExpression()
		 * @generated
		 */
		EClass ASSIGNMENT_EXPRESSION = eINSTANCE.getAssignmentExpression();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.Type <em>Type</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.Type
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getType()
		 * @generated
		 */
		EClass TYPE = eINSTANCE.getType();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.TypeDefinition <em>Type Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.TypeDefinition
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getTypeDefinition()
		 * @generated
		 */
		EClass TYPE_DEFINITION = eINSTANCE.getTypeDefinition();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.BasicTypeDefinition <em>Basic Type Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.BasicTypeDefinition
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBasicTypeDefinition()
		 * @generated
		 */
		EClass BASIC_TYPE_DEFINITION = eINSTANCE.getBasicTypeDefinition();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.IntegerTypeDefinitionImpl <em>Integer Type Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.IntegerTypeDefinitionImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getIntegerTypeDefinition()
		 * @generated
		 */
		EClass INTEGER_TYPE_DEFINITION = eINSTANCE.getIntegerTypeDefinition();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.BooleanTypeDefinitionImpl <em>Boolean Type Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.BooleanTypeDefinitionImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBooleanTypeDefinition()
		 * @generated
		 */
		EClass BOOLEAN_TYPE_DEFINITION = eINSTANCE.getBooleanTypeDefinition();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.VoidTypeDefinitionImpl <em>Void Type Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.VoidTypeDefinitionImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getVoidTypeDefinition()
		 * @generated
		 */
		EClass VOID_TYPE_DEFINITION = eINSTANCE.getVoidTypeDefinition();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunctionTypeDefinitionImpl <em>Function Type Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.FunctionTypeDefinitionImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunctionTypeDefinition()
		 * @generated
		 */
		EClass FUNCTION_TYPE_DEFINITION = eINSTANCE.getFunctionTypeDefinition();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.ReferenceExpressionImpl <em>Reference Expression</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.ReferenceExpressionImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getReferenceExpression()
		 * @generated
		 */
		EClass REFERENCE_EXPRESSION = eINSTANCE.getReferenceExpression();

		/**
		 * The meta object literal for the '<em><b>Argument List</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference REFERENCE_EXPRESSION__ARGUMENT_LIST = eINSTANCE.getReferenceExpression_ArgumentList();

		/**
		 * The meta object literal for the '<em><b>Declaration</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference REFERENCE_EXPRESSION__DECLARATION = eINSTANCE.getReferenceExpression_Declaration();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.ArgumentListImpl <em>Argument List</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.ArgumentListImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getArgumentList()
		 * @generated
		 */
		EClass ARGUMENT_LIST = eINSTANCE.getArgumentList();

		/**
		 * The meta object literal for the '<em><b>Arguments</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference ARGUMENT_LIST__ARGUMENTS = eINSTANCE.getArgumentList_Arguments();

		/**
		 * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FinalValueDeclarationImpl <em>Final Value Declaration</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see xyz.varad.funpl.funPL.impl.FinalValueDeclarationImpl
		 * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFinalValueDeclaration()
		 * @generated
		 */
		EClass FINAL_VALUE_DECLARATION = eINSTANCE.getFinalValueDeclaration();

	}

} //FunPLPackage

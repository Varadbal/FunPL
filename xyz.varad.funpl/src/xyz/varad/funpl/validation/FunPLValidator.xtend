/*
 * generated by Xtext 2.14.0
 */
package xyz.varad.funpl.validation

import org.eclipse.xtext.validation.Check
import xyz.varad.funpl.funPL.DefinitionRef
import com.google.inject.Inject
import xyz.varad.funpl.FunPLModelUtil
import xyz.varad.funpl.funPL.FunPLPackage

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class FunPLValidator extends AbstractFunPLValidator {
	//TODO forward reference
	//TODO duplicate variable
	//TODO const reassignment
	//TODO const must be initialized
	//TODO function call #args=#params
	
	private static val ISSUE_CODE_PREFIX = "xyz.varad.funpl."
	public static val FORWARD_REFERENCE = ISSUE_CODE_PREFIX + "ForwardReference"
	
	
	@Inject extension FunPLModelUtil
	
	@Check
	def void checkForwardReference(DefinitionRef defRef){
		val definition = defRef.definition
		if(definition !== null && !defRef.isDefinedBefore){
			error("Definition forward reference not allowed: '" + definition.name + "'",
				FunPLPackage::eINSTANCE.definitionRef_Definition,
				FORWARD_REFERENCE,
				definition.name
			)
		}
	}
	
}

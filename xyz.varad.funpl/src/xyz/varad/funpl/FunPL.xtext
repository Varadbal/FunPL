grammar xyz.varad.funpl.FunPL with org.eclipse.xtext.common.Terminals

generate funPL "http://www.varad.xyz/funpl/FunPL"

FunProgram:
	elements+=AbstractElement*
;

AbstractElement:
	Definition
;

Definition:
	Value | Function
;

Value:
	//TODO type: 'var' (type=...)? name=ID ...
	(isConst?='const' | 'var') name=ID ('=' expression=Expression)? ';'
;

Function:
	'function' name=ID '(' (params+=FunctionParam (',' params+=FunctionParam)* )? ')' body=Block
;

FunctionParam:
	Name=ID
;

Block:
	'{'
	{Block} statements+=Statement*
	'}'
;

Statement:
	Value | (Expression ';')
;

Expression:
	Assignment
;

Assignment returns Expression:
	Plus({Assignment.left=current} '=' right=Expression)?
;

Plus returns Expression:
	PrimaryExpression({Plus.left=current} '+' right=PrimaryExpression)*
;

PrimaryExpression returns Expression:
	'(' Expression ')' |
	FunctionCall |
	TerminalExpression
;

FunctionCall returns Expression:
	{FunctionCall} function=[Function] '(' (args+=Expression (',' args+=Expression)*)? ')'
;

TerminalExpression:
	{IntConstant} value=INT | 
	{StringConstant} value=STRING |
	{BoolConstant} value=('true'|'false') |
	{DefinitionRef} definition=[Definition]
;


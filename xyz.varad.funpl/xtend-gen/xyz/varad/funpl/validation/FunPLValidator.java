/**
 * generated by Xtext 2.14.0
 */
package xyz.varad.funpl.validation;

import com.google.inject.Inject;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.xbase.lib.Extension;
import xyz.varad.funpl.FunPLModelUtil;
import xyz.varad.funpl.funPL.FunPLPackage;
import xyz.varad.funpl.funPL.Symbol;
import xyz.varad.funpl.funPL.SymbolRef;
import xyz.varad.funpl.validation.AbstractFunPLValidator;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class FunPLValidator extends AbstractFunPLValidator {
  private final static String ISSUE_CODE_PREFIX = "xyz.varad.funpl.";
  
  public final static String FORWARD_REFERENCE = (FunPLValidator.ISSUE_CODE_PREFIX + "ForwardReference");
  
  @Inject
  @Extension
  private FunPLModelUtil _funPLModelUtil;
  
  @Check
  public void checkForwardReference(final SymbolRef _sym) {
    final Symbol symbol = _sym.getSymbol();
    if (((symbol != null) && (!this._funPLModelUtil.isDefinedBefore(_sym)))) {
      String _name = symbol.getName();
      String _plus = ("Symbol forward reference not allowed: \'" + _name);
      String _plus_1 = (_plus + "\'");
      this.error(_plus_1, 
        FunPLPackage.eINSTANCE.getSymbolRef_Symbol(), 
        FunPLValidator.FORWARD_REFERENCE, 
        symbol.getName());
    }
  }
}

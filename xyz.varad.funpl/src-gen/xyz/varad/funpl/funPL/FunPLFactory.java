/**
 * generated by Xtext 2.14.0
 */
package xyz.varad.funpl.funPL;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see xyz.varad.funpl.funPL.FunPLPackage
 * @generated
 */
public interface FunPLFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  FunPLFactory eINSTANCE = xyz.varad.funpl.funPL.impl.FunPLFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Fun Program</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fun Program</em>'.
   * @generated
   */
  FunProgram createFunProgram();

  /**
   * Returns a new object of class '<em>Fun Abstract Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fun Abstract Element</em>'.
   * @generated
   */
  FunAbstractElement createFunAbstractElement();

  /**
   * Returns a new object of class '<em>Fun Var Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fun Var Declaration</em>'.
   * @generated
   */
  FunVarDeclaration createFunVarDeclaration();

  /**
   * Returns a new object of class '<em>Fun Method</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fun Method</em>'.
   * @generated
   */
  FunMethod createFunMethod();

  /**
   * Returns a new object of class '<em>Fun Block</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fun Block</em>'.
   * @generated
   */
  FunBlock createFunBlock();

  /**
   * Returns a new object of class '<em>Fun Parameter</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fun Parameter</em>'.
   * @generated
   */
  FunParameter createFunParameter();

  /**
   * Returns a new object of class '<em>Fun Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fun Statement</em>'.
   * @generated
   */
  FunStatement createFunStatement();

  /**
   * Returns a new object of class '<em>Fun Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fun Expression</em>'.
   * @generated
   */
  FunExpression createFunExpression();

  /**
   * Returns a new object of class '<em>Fun Atomic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fun Atomic</em>'.
   * @generated
   */
  FunAtomic createFunAtomic();

  /**
   * Returns a new object of class '<em>Fun Plus</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fun Plus</em>'.
   * @generated
   */
  FunPlus createFunPlus();

  /**
   * Returns a new object of class '<em>String Constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>String Constant</em>'.
   * @generated
   */
  StringConstant createStringConstant();

  /**
   * Returns a new object of class '<em>Int Constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Int Constant</em>'.
   * @generated
   */
  IntConstant createIntConstant();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  FunPLPackage getFunPLPackage();

} //FunPLFactory

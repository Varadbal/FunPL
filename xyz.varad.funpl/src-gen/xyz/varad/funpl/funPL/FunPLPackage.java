/**
 * generated by Xtext 2.14.0
 */
package xyz.varad.funpl.funPL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see xyz.varad.funpl.funPL.FunPLFactory
 * @model kind="package"
 * @generated
 */
public interface FunPLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "funPL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.varad.xyz/funpl/FunPL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "funPL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  FunPLPackage eINSTANCE = xyz.varad.funpl.funPL.impl.FunPLPackageImpl.init();

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunProgramImpl <em>Fun Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunProgramImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunProgram()
   * @generated
   */
  int FUN_PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_PROGRAM__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Fun Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_PROGRAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.AbstractElementImpl <em>Abstract Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.AbstractElementImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getAbstractElement()
   * @generated
   */
  int ABSTRACT_ELEMENT = 1;

  /**
   * The number of structural features of the '<em>Abstract Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_ELEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.SymbolImpl <em>Symbol</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.SymbolImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getSymbol()
   * @generated
   */
  int SYMBOL = 2;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SYMBOL__TYPE = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SYMBOL__NAME = 1;

  /**
   * The number of structural features of the '<em>Symbol</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SYMBOL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.DefinitionImpl <em>Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.DefinitionImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getDefinition()
   * @generated
   */
  int DEFINITION = 3;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__TYPE = ABSTRACT_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__NAME = ABSTRACT_ELEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION_FEATURE_COUNT = ABSTRACT_ELEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.ValueImpl <em>Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.ValueImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getValue()
   * @generated
   */
  int VALUE = 4;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__TYPE = DEFINITION__TYPE;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__NAME = DEFINITION__NAME;

  /**
   * The feature id for the '<em><b>Const</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__CONST = DEFINITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__EXPRESSION = DEFINITION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE_FEATURE_COUNT = DEFINITION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunctionImpl <em>Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunctionImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunction()
   * @generated
   */
  int FUNCTION = 5;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__TYPE = DEFINITION__TYPE;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__NAME = DEFINITION__NAME;

  /**
   * The feature id for the '<em><b>Return Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__RETURN_TYPE = DEFINITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__PARAMS = DEFINITION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__BODY = DEFINITION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_FEATURE_COUNT = DEFINITION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunctionParamImpl <em>Function Param</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunctionParamImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunctionParam()
   * @generated
   */
  int FUNCTION_PARAM = 6;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_PARAM__TYPE = SYMBOL__TYPE;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_PARAM__NAME = SYMBOL__NAME;

  /**
   * The number of structural features of the '<em>Function Param</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_PARAM_FEATURE_COUNT = SYMBOL_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.BlockImpl <em>Block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.BlockImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBlock()
   * @generated
   */
  int BLOCK = 7;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__STATEMENTS = 0;

  /**
   * The number of structural features of the '<em>Block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.StatementImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 8;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.ReturnStatementImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getReturnStatement()
   * @generated
   */
  int RETURN_STATEMENT = 9;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_STATEMENT__EXPRESSION = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Return Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.TypeImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getType()
   * @generated
   */
  int TYPE = 10;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.TypeDefinitionImpl <em>Type Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.TypeDefinitionImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getTypeDefinition()
   * @generated
   */
  int TYPE_DEFINITION = 11;

  /**
   * The number of structural features of the '<em>Type Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION_FEATURE_COUNT = TYPE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.IntTypeDefinitionImpl <em>Int Type Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.IntTypeDefinitionImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getIntTypeDefinition()
   * @generated
   */
  int INT_TYPE_DEFINITION = 12;

  /**
   * The number of structural features of the '<em>Int Type Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_TYPE_DEFINITION_FEATURE_COUNT = TYPE_DEFINITION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.BoolTypeDefinitionImpl <em>Bool Type Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.BoolTypeDefinitionImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBoolTypeDefinition()
   * @generated
   */
  int BOOL_TYPE_DEFINITION = 13;

  /**
   * The number of structural features of the '<em>Bool Type Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_TYPE_DEFINITION_FEATURE_COUNT = TYPE_DEFINITION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.StringTypeDefinitionImpl <em>String Type Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.StringTypeDefinitionImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getStringTypeDefinition()
   * @generated
   */
  int STRING_TYPE_DEFINITION = 14;

  /**
   * The number of structural features of the '<em>String Type Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_TYPE_DEFINITION_FEATURE_COUNT = TYPE_DEFINITION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.ExpressionImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 15;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunctionReferenceTypeDefinitionImpl <em>Function Reference Type Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunctionReferenceTypeDefinitionImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunctionReferenceTypeDefinition()
   * @generated
   */
  int FUNCTION_REFERENCE_TYPE_DEFINITION = 16;

  /**
   * The number of structural features of the '<em>Function Reference Type Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_REFERENCE_TYPE_DEFINITION_FEATURE_COUNT = TYPE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.VoidTypeDefinitionImpl <em>Void Type Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.VoidTypeDefinitionImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getVoidTypeDefinition()
   * @generated
   */
  int VOID_TYPE_DEFINITION = 17;

  /**
   * The number of structural features of the '<em>Void Type Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VOID_TYPE_DEFINITION_FEATURE_COUNT = TYPE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.AssignmentImpl <em>Assignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.AssignmentImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getAssignment()
   * @generated
   */
  int ASSIGNMENT = 18;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Assignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.PlusImpl <em>Plus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.PlusImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getPlus()
   * @generated
   */
  int PLUS = 19;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Plus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunctionCallImpl <em>Function Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunctionCallImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunctionCall()
   * @generated
   */
  int FUNCTION_CALL = 20;

  /**
   * The feature id for the '<em><b>Function</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_CALL__FUNCTION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_CALL__ARGS = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Function Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_CALL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.IntConstantImpl <em>Int Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.IntConstantImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getIntConstant()
   * @generated
   */
  int INT_CONSTANT = 21;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONSTANT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Int Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.StringConstantImpl <em>String Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.StringConstantImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getStringConstant()
   * @generated
   */
  int STRING_CONSTANT = 22;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_CONSTANT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.BoolConstantImpl <em>Bool Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.BoolConstantImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBoolConstant()
   * @generated
   */
  int BOOL_CONSTANT = 23;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_CONSTANT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Bool Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.SymbolRefImpl <em>Symbol Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.SymbolRefImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getSymbolRef()
   * @generated
   */
  int SYMBOL_REF = 24;

  /**
   * The feature id for the '<em><b>Symbol</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SYMBOL_REF__SYMBOL = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Symbol Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SYMBOL_REF_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunProgram <em>Fun Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Program</em>'.
   * @see xyz.varad.funpl.funPL.FunProgram
   * @generated
   */
  EClass getFunProgram();

  /**
   * Returns the meta object for the containment reference list '{@link xyz.varad.funpl.funPL.FunProgram#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see xyz.varad.funpl.funPL.FunProgram#getElements()
   * @see #getFunProgram()
   * @generated
   */
  EReference getFunProgram_Elements();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.AbstractElement <em>Abstract Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Abstract Element</em>'.
   * @see xyz.varad.funpl.funPL.AbstractElement
   * @generated
   */
  EClass getAbstractElement();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Symbol <em>Symbol</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Symbol</em>'.
   * @see xyz.varad.funpl.funPL.Symbol
   * @generated
   */
  EClass getSymbol();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.Symbol#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see xyz.varad.funpl.funPL.Symbol#getType()
   * @see #getSymbol()
   * @generated
   */
  EReference getSymbol_Type();

  /**
   * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.Symbol#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see xyz.varad.funpl.funPL.Symbol#getName()
   * @see #getSymbol()
   * @generated
   */
  EAttribute getSymbol_Name();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Definition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Definition</em>'.
   * @see xyz.varad.funpl.funPL.Definition
   * @generated
   */
  EClass getDefinition();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Value <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Value</em>'.
   * @see xyz.varad.funpl.funPL.Value
   * @generated
   */
  EClass getValue();

  /**
   * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.Value#isConst <em>Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Const</em>'.
   * @see xyz.varad.funpl.funPL.Value#isConst()
   * @see #getValue()
   * @generated
   */
  EAttribute getValue_Const();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.Value#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see xyz.varad.funpl.funPL.Value#getExpression()
   * @see #getValue()
   * @generated
   */
  EReference getValue_Expression();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Function <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function</em>'.
   * @see xyz.varad.funpl.funPL.Function
   * @generated
   */
  EClass getFunction();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.Function#getReturnType <em>Return Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return Type</em>'.
   * @see xyz.varad.funpl.funPL.Function#getReturnType()
   * @see #getFunction()
   * @generated
   */
  EReference getFunction_ReturnType();

  /**
   * Returns the meta object for the containment reference list '{@link xyz.varad.funpl.funPL.Function#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see xyz.varad.funpl.funPL.Function#getParams()
   * @see #getFunction()
   * @generated
   */
  EReference getFunction_Params();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.Function#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see xyz.varad.funpl.funPL.Function#getBody()
   * @see #getFunction()
   * @generated
   */
  EReference getFunction_Body();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunctionParam <em>Function Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Param</em>'.
   * @see xyz.varad.funpl.funPL.FunctionParam
   * @generated
   */
  EClass getFunctionParam();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Block <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block</em>'.
   * @see xyz.varad.funpl.funPL.Block
   * @generated
   */
  EClass getBlock();

  /**
   * Returns the meta object for the containment reference list '{@link xyz.varad.funpl.funPL.Block#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see xyz.varad.funpl.funPL.Block#getStatements()
   * @see #getBlock()
   * @generated
   */
  EReference getBlock_Statements();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see xyz.varad.funpl.funPL.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.ReturnStatement <em>Return Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Return Statement</em>'.
   * @see xyz.varad.funpl.funPL.ReturnStatement
   * @generated
   */
  EClass getReturnStatement();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.ReturnStatement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see xyz.varad.funpl.funPL.ReturnStatement#getExpression()
   * @see #getReturnStatement()
   * @generated
   */
  EReference getReturnStatement_Expression();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see xyz.varad.funpl.funPL.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.TypeDefinition <em>Type Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Definition</em>'.
   * @see xyz.varad.funpl.funPL.TypeDefinition
   * @generated
   */
  EClass getTypeDefinition();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.IntTypeDefinition <em>Int Type Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Type Definition</em>'.
   * @see xyz.varad.funpl.funPL.IntTypeDefinition
   * @generated
   */
  EClass getIntTypeDefinition();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.BoolTypeDefinition <em>Bool Type Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bool Type Definition</em>'.
   * @see xyz.varad.funpl.funPL.BoolTypeDefinition
   * @generated
   */
  EClass getBoolTypeDefinition();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.StringTypeDefinition <em>String Type Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Type Definition</em>'.
   * @see xyz.varad.funpl.funPL.StringTypeDefinition
   * @generated
   */
  EClass getStringTypeDefinition();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see xyz.varad.funpl.funPL.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunctionReferenceTypeDefinition <em>Function Reference Type Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Reference Type Definition</em>'.
   * @see xyz.varad.funpl.funPL.FunctionReferenceTypeDefinition
   * @generated
   */
  EClass getFunctionReferenceTypeDefinition();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.VoidTypeDefinition <em>Void Type Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Void Type Definition</em>'.
   * @see xyz.varad.funpl.funPL.VoidTypeDefinition
   * @generated
   */
  EClass getVoidTypeDefinition();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Assignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assignment</em>'.
   * @see xyz.varad.funpl.funPL.Assignment
   * @generated
   */
  EClass getAssignment();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.Assignment#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see xyz.varad.funpl.funPL.Assignment#getLeft()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Left();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.Assignment#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see xyz.varad.funpl.funPL.Assignment#getRight()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Right();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.Plus <em>Plus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Plus</em>'.
   * @see xyz.varad.funpl.funPL.Plus
   * @generated
   */
  EClass getPlus();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.Plus#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see xyz.varad.funpl.funPL.Plus#getLeft()
   * @see #getPlus()
   * @generated
   */
  EReference getPlus_Left();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.Plus#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see xyz.varad.funpl.funPL.Plus#getRight()
   * @see #getPlus()
   * @generated
   */
  EReference getPlus_Right();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunctionCall <em>Function Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Call</em>'.
   * @see xyz.varad.funpl.funPL.FunctionCall
   * @generated
   */
  EClass getFunctionCall();

  /**
   * Returns the meta object for the reference '{@link xyz.varad.funpl.funPL.FunctionCall#getFunction <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Function</em>'.
   * @see xyz.varad.funpl.funPL.FunctionCall#getFunction()
   * @see #getFunctionCall()
   * @generated
   */
  EReference getFunctionCall_Function();

  /**
   * Returns the meta object for the containment reference list '{@link xyz.varad.funpl.funPL.FunctionCall#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see xyz.varad.funpl.funPL.FunctionCall#getArgs()
   * @see #getFunctionCall()
   * @generated
   */
  EReference getFunctionCall_Args();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.IntConstant <em>Int Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Constant</em>'.
   * @see xyz.varad.funpl.funPL.IntConstant
   * @generated
   */
  EClass getIntConstant();

  /**
   * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.IntConstant#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see xyz.varad.funpl.funPL.IntConstant#getValue()
   * @see #getIntConstant()
   * @generated
   */
  EAttribute getIntConstant_Value();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.StringConstant <em>String Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Constant</em>'.
   * @see xyz.varad.funpl.funPL.StringConstant
   * @generated
   */
  EClass getStringConstant();

  /**
   * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.StringConstant#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see xyz.varad.funpl.funPL.StringConstant#getValue()
   * @see #getStringConstant()
   * @generated
   */
  EAttribute getStringConstant_Value();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.BoolConstant <em>Bool Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bool Constant</em>'.
   * @see xyz.varad.funpl.funPL.BoolConstant
   * @generated
   */
  EClass getBoolConstant();

  /**
   * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.BoolConstant#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see xyz.varad.funpl.funPL.BoolConstant#getValue()
   * @see #getBoolConstant()
   * @generated
   */
  EAttribute getBoolConstant_Value();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.SymbolRef <em>Symbol Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Symbol Ref</em>'.
   * @see xyz.varad.funpl.funPL.SymbolRef
   * @generated
   */
  EClass getSymbolRef();

  /**
   * Returns the meta object for the reference '{@link xyz.varad.funpl.funPL.SymbolRef#getSymbol <em>Symbol</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Symbol</em>'.
   * @see xyz.varad.funpl.funPL.SymbolRef#getSymbol()
   * @see #getSymbolRef()
   * @generated
   */
  EReference getSymbolRef_Symbol();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  FunPLFactory getFunPLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunProgramImpl <em>Fun Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunProgramImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunProgram()
     * @generated
     */
    EClass FUN_PROGRAM = eINSTANCE.getFunProgram();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUN_PROGRAM__ELEMENTS = eINSTANCE.getFunProgram_Elements();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.AbstractElementImpl <em>Abstract Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.AbstractElementImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getAbstractElement()
     * @generated
     */
    EClass ABSTRACT_ELEMENT = eINSTANCE.getAbstractElement();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.SymbolImpl <em>Symbol</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.SymbolImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getSymbol()
     * @generated
     */
    EClass SYMBOL = eINSTANCE.getSymbol();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SYMBOL__TYPE = eINSTANCE.getSymbol_Type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SYMBOL__NAME = eINSTANCE.getSymbol_Name();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.DefinitionImpl <em>Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.DefinitionImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getDefinition()
     * @generated
     */
    EClass DEFINITION = eINSTANCE.getDefinition();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.ValueImpl <em>Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.ValueImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getValue()
     * @generated
     */
    EClass VALUE = eINSTANCE.getValue();

    /**
     * The meta object literal for the '<em><b>Const</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VALUE__CONST = eINSTANCE.getValue_Const();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VALUE__EXPRESSION = eINSTANCE.getValue_Expression();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunctionImpl <em>Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunctionImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunction()
     * @generated
     */
    EClass FUNCTION = eINSTANCE.getFunction();

    /**
     * The meta object literal for the '<em><b>Return Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION__RETURN_TYPE = eINSTANCE.getFunction_ReturnType();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION__PARAMS = eINSTANCE.getFunction_Params();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION__BODY = eINSTANCE.getFunction_Body();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunctionParamImpl <em>Function Param</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunctionParamImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunctionParam()
     * @generated
     */
    EClass FUNCTION_PARAM = eINSTANCE.getFunctionParam();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.BlockImpl <em>Block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.BlockImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBlock()
     * @generated
     */
    EClass BLOCK = eINSTANCE.getBlock();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__STATEMENTS = eINSTANCE.getBlock_Statements();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.StatementImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.ReturnStatementImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getReturnStatement()
     * @generated
     */
    EClass RETURN_STATEMENT = eINSTANCE.getReturnStatement();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_STATEMENT__EXPRESSION = eINSTANCE.getReturnStatement_Expression();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.TypeImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.TypeDefinitionImpl <em>Type Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.TypeDefinitionImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getTypeDefinition()
     * @generated
     */
    EClass TYPE_DEFINITION = eINSTANCE.getTypeDefinition();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.IntTypeDefinitionImpl <em>Int Type Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.IntTypeDefinitionImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getIntTypeDefinition()
     * @generated
     */
    EClass INT_TYPE_DEFINITION = eINSTANCE.getIntTypeDefinition();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.BoolTypeDefinitionImpl <em>Bool Type Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.BoolTypeDefinitionImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBoolTypeDefinition()
     * @generated
     */
    EClass BOOL_TYPE_DEFINITION = eINSTANCE.getBoolTypeDefinition();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.StringTypeDefinitionImpl <em>String Type Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.StringTypeDefinitionImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getStringTypeDefinition()
     * @generated
     */
    EClass STRING_TYPE_DEFINITION = eINSTANCE.getStringTypeDefinition();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.ExpressionImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunctionReferenceTypeDefinitionImpl <em>Function Reference Type Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunctionReferenceTypeDefinitionImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunctionReferenceTypeDefinition()
     * @generated
     */
    EClass FUNCTION_REFERENCE_TYPE_DEFINITION = eINSTANCE.getFunctionReferenceTypeDefinition();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.VoidTypeDefinitionImpl <em>Void Type Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.VoidTypeDefinitionImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getVoidTypeDefinition()
     * @generated
     */
    EClass VOID_TYPE_DEFINITION = eINSTANCE.getVoidTypeDefinition();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.AssignmentImpl <em>Assignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.AssignmentImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getAssignment()
     * @generated
     */
    EClass ASSIGNMENT = eINSTANCE.getAssignment();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__LEFT = eINSTANCE.getAssignment_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__RIGHT = eINSTANCE.getAssignment_Right();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.PlusImpl <em>Plus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.PlusImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getPlus()
     * @generated
     */
    EClass PLUS = eINSTANCE.getPlus();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLUS__LEFT = eINSTANCE.getPlus_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLUS__RIGHT = eINSTANCE.getPlus_Right();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunctionCallImpl <em>Function Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunctionCallImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunctionCall()
     * @generated
     */
    EClass FUNCTION_CALL = eINSTANCE.getFunctionCall();

    /**
     * The meta object literal for the '<em><b>Function</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_CALL__FUNCTION = eINSTANCE.getFunctionCall_Function();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_CALL__ARGS = eINSTANCE.getFunctionCall_Args();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.IntConstantImpl <em>Int Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.IntConstantImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getIntConstant()
     * @generated
     */
    EClass INT_CONSTANT = eINSTANCE.getIntConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INT_CONSTANT__VALUE = eINSTANCE.getIntConstant_Value();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.StringConstantImpl <em>String Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.StringConstantImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getStringConstant()
     * @generated
     */
    EClass STRING_CONSTANT = eINSTANCE.getStringConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_CONSTANT__VALUE = eINSTANCE.getStringConstant_Value();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.BoolConstantImpl <em>Bool Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.BoolConstantImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getBoolConstant()
     * @generated
     */
    EClass BOOL_CONSTANT = eINSTANCE.getBoolConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOL_CONSTANT__VALUE = eINSTANCE.getBoolConstant_Value();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.SymbolRefImpl <em>Symbol Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.SymbolRefImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getSymbolRef()
     * @generated
     */
    EClass SYMBOL_REF = eINSTANCE.getSymbolRef();

    /**
     * The meta object literal for the '<em><b>Symbol</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SYMBOL_REF__SYMBOL = eINSTANCE.getSymbolRef_Symbol();

  }

} //FunPLPackage

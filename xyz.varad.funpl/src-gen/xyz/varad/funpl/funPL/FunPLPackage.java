/**
 * generated by Xtext 2.14.0
 */
package xyz.varad.funpl.funPL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see xyz.varad.funpl.funPL.FunPLFactory
 * @model kind="package"
 * @generated
 */
public interface FunPLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "funPL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.varad.xyz/funpl/FunPL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "funPL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  FunPLPackage eINSTANCE = xyz.varad.funpl.funPL.impl.FunPLPackageImpl.init();

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunProgramImpl <em>Fun Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunProgramImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunProgram()
   * @generated
   */
  int FUN_PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_PROGRAM__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Fun Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_PROGRAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunAbstractElementImpl <em>Fun Abstract Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunAbstractElementImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunAbstractElement()
   * @generated
   */
  int FUN_ABSTRACT_ELEMENT = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_ABSTRACT_ELEMENT__NAME = 0;

  /**
   * The number of structural features of the '<em>Fun Abstract Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_ABSTRACT_ELEMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunVarDeclarationImpl <em>Fun Var Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunVarDeclarationImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunVarDeclaration()
   * @generated
   */
  int FUN_VAR_DECLARATION = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_VAR_DECLARATION__NAME = FUN_ABSTRACT_ELEMENT__NAME;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_VAR_DECLARATION__VALUE = FUN_ABSTRACT_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Fun Var Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_VAR_DECLARATION_FEATURE_COUNT = FUN_ABSTRACT_ELEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunMethodImpl <em>Fun Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunMethodImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunMethod()
   * @generated
   */
  int FUN_METHOD = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_METHOD__NAME = FUN_ABSTRACT_ELEMENT__NAME;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_METHOD__PARAMS = FUN_ABSTRACT_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_METHOD__BODY = FUN_ABSTRACT_ELEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Fun Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_METHOD_FEATURE_COUNT = FUN_ABSTRACT_ELEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunBlockImpl <em>Fun Block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunBlockImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunBlock()
   * @generated
   */
  int FUN_BLOCK = 4;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_BLOCK__STATEMENTS = 0;

  /**
   * The number of structural features of the '<em>Fun Block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_BLOCK_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunParameterImpl <em>Fun Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunParameterImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunParameter()
   * @generated
   */
  int FUN_PARAMETER = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_PARAMETER__NAME = 0;

  /**
   * The number of structural features of the '<em>Fun Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_PARAMETER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunStatementImpl <em>Fun Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunStatementImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunStatement()
   * @generated
   */
  int FUN_STATEMENT = 6;

  /**
   * The number of structural features of the '<em>Fun Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_STATEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunExpressionImpl <em>Fun Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunExpressionImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunExpression()
   * @generated
   */
  int FUN_EXPRESSION = 7;

  /**
   * The number of structural features of the '<em>Fun Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_EXPRESSION_FEATURE_COUNT = FUN_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunAtomicImpl <em>Fun Atomic</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunAtomicImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunAtomic()
   * @generated
   */
  int FUN_ATOMIC = 8;

  /**
   * The number of structural features of the '<em>Fun Atomic</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_ATOMIC_FEATURE_COUNT = FUN_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.FunPlusImpl <em>Fun Plus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.FunPlusImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunPlus()
   * @generated
   */
  int FUN_PLUS = 9;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_PLUS__LEFT = FUN_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_PLUS__RIGHT = FUN_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Fun Plus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_PLUS_FEATURE_COUNT = FUN_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.StringConstantImpl <em>String Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.StringConstantImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getStringConstant()
   * @generated
   */
  int STRING_CONSTANT = 10;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_CONSTANT__VALUE = FUN_ATOMIC_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_CONSTANT_FEATURE_COUNT = FUN_ATOMIC_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link xyz.varad.funpl.funPL.impl.IntConstantImpl <em>Int Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xyz.varad.funpl.funPL.impl.IntConstantImpl
   * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getIntConstant()
   * @generated
   */
  int INT_CONSTANT = 11;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONSTANT__VALUE = FUN_ATOMIC_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Int Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONSTANT_FEATURE_COUNT = FUN_ATOMIC_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunProgram <em>Fun Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Program</em>'.
   * @see xyz.varad.funpl.funPL.FunProgram
   * @generated
   */
  EClass getFunProgram();

  /**
   * Returns the meta object for the containment reference list '{@link xyz.varad.funpl.funPL.FunProgram#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see xyz.varad.funpl.funPL.FunProgram#getElements()
   * @see #getFunProgram()
   * @generated
   */
  EReference getFunProgram_Elements();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunAbstractElement <em>Fun Abstract Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Abstract Element</em>'.
   * @see xyz.varad.funpl.funPL.FunAbstractElement
   * @generated
   */
  EClass getFunAbstractElement();

  /**
   * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.FunAbstractElement#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see xyz.varad.funpl.funPL.FunAbstractElement#getName()
   * @see #getFunAbstractElement()
   * @generated
   */
  EAttribute getFunAbstractElement_Name();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunVarDeclaration <em>Fun Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Var Declaration</em>'.
   * @see xyz.varad.funpl.funPL.FunVarDeclaration
   * @generated
   */
  EClass getFunVarDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.FunVarDeclaration#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see xyz.varad.funpl.funPL.FunVarDeclaration#getValue()
   * @see #getFunVarDeclaration()
   * @generated
   */
  EReference getFunVarDeclaration_Value();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunMethod <em>Fun Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Method</em>'.
   * @see xyz.varad.funpl.funPL.FunMethod
   * @generated
   */
  EClass getFunMethod();

  /**
   * Returns the meta object for the containment reference list '{@link xyz.varad.funpl.funPL.FunMethod#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see xyz.varad.funpl.funPL.FunMethod#getParams()
   * @see #getFunMethod()
   * @generated
   */
  EReference getFunMethod_Params();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.FunMethod#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see xyz.varad.funpl.funPL.FunMethod#getBody()
   * @see #getFunMethod()
   * @generated
   */
  EReference getFunMethod_Body();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunBlock <em>Fun Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Block</em>'.
   * @see xyz.varad.funpl.funPL.FunBlock
   * @generated
   */
  EClass getFunBlock();

  /**
   * Returns the meta object for the containment reference list '{@link xyz.varad.funpl.funPL.FunBlock#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see xyz.varad.funpl.funPL.FunBlock#getStatements()
   * @see #getFunBlock()
   * @generated
   */
  EReference getFunBlock_Statements();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunParameter <em>Fun Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Parameter</em>'.
   * @see xyz.varad.funpl.funPL.FunParameter
   * @generated
   */
  EClass getFunParameter();

  /**
   * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.FunParameter#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see xyz.varad.funpl.funPL.FunParameter#getName()
   * @see #getFunParameter()
   * @generated
   */
  EAttribute getFunParameter_Name();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunStatement <em>Fun Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Statement</em>'.
   * @see xyz.varad.funpl.funPL.FunStatement
   * @generated
   */
  EClass getFunStatement();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunExpression <em>Fun Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Expression</em>'.
   * @see xyz.varad.funpl.funPL.FunExpression
   * @generated
   */
  EClass getFunExpression();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunAtomic <em>Fun Atomic</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Atomic</em>'.
   * @see xyz.varad.funpl.funPL.FunAtomic
   * @generated
   */
  EClass getFunAtomic();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.FunPlus <em>Fun Plus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Plus</em>'.
   * @see xyz.varad.funpl.funPL.FunPlus
   * @generated
   */
  EClass getFunPlus();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.FunPlus#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see xyz.varad.funpl.funPL.FunPlus#getLeft()
   * @see #getFunPlus()
   * @generated
   */
  EReference getFunPlus_Left();

  /**
   * Returns the meta object for the containment reference '{@link xyz.varad.funpl.funPL.FunPlus#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see xyz.varad.funpl.funPL.FunPlus#getRight()
   * @see #getFunPlus()
   * @generated
   */
  EReference getFunPlus_Right();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.StringConstant <em>String Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Constant</em>'.
   * @see xyz.varad.funpl.funPL.StringConstant
   * @generated
   */
  EClass getStringConstant();

  /**
   * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.StringConstant#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see xyz.varad.funpl.funPL.StringConstant#getValue()
   * @see #getStringConstant()
   * @generated
   */
  EAttribute getStringConstant_Value();

  /**
   * Returns the meta object for class '{@link xyz.varad.funpl.funPL.IntConstant <em>Int Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Constant</em>'.
   * @see xyz.varad.funpl.funPL.IntConstant
   * @generated
   */
  EClass getIntConstant();

  /**
   * Returns the meta object for the attribute '{@link xyz.varad.funpl.funPL.IntConstant#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see xyz.varad.funpl.funPL.IntConstant#getValue()
   * @see #getIntConstant()
   * @generated
   */
  EAttribute getIntConstant_Value();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  FunPLFactory getFunPLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunProgramImpl <em>Fun Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunProgramImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunProgram()
     * @generated
     */
    EClass FUN_PROGRAM = eINSTANCE.getFunProgram();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUN_PROGRAM__ELEMENTS = eINSTANCE.getFunProgram_Elements();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunAbstractElementImpl <em>Fun Abstract Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunAbstractElementImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunAbstractElement()
     * @generated
     */
    EClass FUN_ABSTRACT_ELEMENT = eINSTANCE.getFunAbstractElement();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUN_ABSTRACT_ELEMENT__NAME = eINSTANCE.getFunAbstractElement_Name();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunVarDeclarationImpl <em>Fun Var Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunVarDeclarationImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunVarDeclaration()
     * @generated
     */
    EClass FUN_VAR_DECLARATION = eINSTANCE.getFunVarDeclaration();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUN_VAR_DECLARATION__VALUE = eINSTANCE.getFunVarDeclaration_Value();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunMethodImpl <em>Fun Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunMethodImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunMethod()
     * @generated
     */
    EClass FUN_METHOD = eINSTANCE.getFunMethod();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUN_METHOD__PARAMS = eINSTANCE.getFunMethod_Params();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUN_METHOD__BODY = eINSTANCE.getFunMethod_Body();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunBlockImpl <em>Fun Block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunBlockImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunBlock()
     * @generated
     */
    EClass FUN_BLOCK = eINSTANCE.getFunBlock();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUN_BLOCK__STATEMENTS = eINSTANCE.getFunBlock_Statements();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunParameterImpl <em>Fun Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunParameterImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunParameter()
     * @generated
     */
    EClass FUN_PARAMETER = eINSTANCE.getFunParameter();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUN_PARAMETER__NAME = eINSTANCE.getFunParameter_Name();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunStatementImpl <em>Fun Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunStatementImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunStatement()
     * @generated
     */
    EClass FUN_STATEMENT = eINSTANCE.getFunStatement();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunExpressionImpl <em>Fun Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunExpressionImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunExpression()
     * @generated
     */
    EClass FUN_EXPRESSION = eINSTANCE.getFunExpression();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunAtomicImpl <em>Fun Atomic</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunAtomicImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunAtomic()
     * @generated
     */
    EClass FUN_ATOMIC = eINSTANCE.getFunAtomic();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.FunPlusImpl <em>Fun Plus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.FunPlusImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getFunPlus()
     * @generated
     */
    EClass FUN_PLUS = eINSTANCE.getFunPlus();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUN_PLUS__LEFT = eINSTANCE.getFunPlus_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUN_PLUS__RIGHT = eINSTANCE.getFunPlus_Right();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.StringConstantImpl <em>String Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.StringConstantImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getStringConstant()
     * @generated
     */
    EClass STRING_CONSTANT = eINSTANCE.getStringConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_CONSTANT__VALUE = eINSTANCE.getStringConstant_Value();

    /**
     * The meta object literal for the '{@link xyz.varad.funpl.funPL.impl.IntConstantImpl <em>Int Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xyz.varad.funpl.funPL.impl.IntConstantImpl
     * @see xyz.varad.funpl.funPL.impl.FunPLPackageImpl#getIntConstant()
     * @generated
     */
    EClass INT_CONSTANT = eINSTANCE.getIntConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INT_CONSTANT__VALUE = eINSTANCE.getIntConstant_Value();

  }

} //FunPLPackage
